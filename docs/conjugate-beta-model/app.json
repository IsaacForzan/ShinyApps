[{"name":"app.R","content":"\r\nlibrary(shiny)\r\nlibrary(ggplot2)\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Bayesian Coin Toss Simulation\"),\r\n  \r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      numericInput(\"alpha\", \"Prior α (alpha)\", value = 1, min = 0.1, step = 0.1),\r\n      numericInput(\"beta\", \"Prior β (beta)\",   value = 1, min = 0.1, step = 0.1),\r\n      numericInput(\"n_toss\", \"Number of tosses\", value = 20, min = 1, step = 1),\r\n      actionButton(\"start\", \"Start Simulation\")\r\n    ),\r\n    \r\n    mainPanel(\r\n      plotOutput(\"priorPlot\"),\r\n      plotOutput(\"histPlot\"),\r\n      plotOutput(\"posteriorPlot\")\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  \r\n  # Plot the prior distribution\r\n  output$priorPlot <- renderPlot({\r\n    x <- seq(0, 1, length.out = 200)\r\n    y <- dbeta(x, input$alpha, input$beta)\r\n    ggplot(data.frame(x, y), aes(x, y)) +\r\n      geom_line(color = \"blue\", linewidth = 1.2) +\r\n      labs(title = \"Prior Beta Distribution\", y = \"Density\", x = \"Probability of Heads\") +\r\n      theme_bw()\r\n  })\r\n  \r\n  # Simulation state\r\n  rv <- reactiveValues(\r\n    tosses = NULL,\r\n    heads = 0,\r\n    tails = 0,\r\n    i = 0, \r\n    interval = 1000\r\n  )\r\n  \r\n  # Run simulation when Start is pressed\r\n  observeEvent(input$start, {\r\n    rv$tosses <- rbinom(input$n_toss, 1, 0.2)  # fair coin\r\n    rv$heads <- 0\r\n    rv$tails <- 0\r\n    rv$i <- 0\r\n    rv$interval <- round(20000 / input$n_toss) # distribute 20s evenly\r\n    \r\n    simulateStep()\r\n  })\r\n  \r\n  # Recursive animation\r\n  simulateStep <- reactive({\r\n    if (rv$i < input$n_toss) {\r\n      rv$i <- rv$i + 1\r\n      toss <- rv$tosses[rv$i]\r\n      if (toss == 1) {\r\n        rv$heads <- rv$heads + 1\r\n      } else {\r\n        rv$tails <- rv$tails + 1\r\n      }\r\n      \r\n      invalidateLater(rv$interval, session)\r\n      simulateStep()\r\n    }\r\n  })\r\n  \r\n  # Histogram of tosses\r\n  output$histPlot <- renderPlot({\r\n    req(rv$i > 0)\r\n    df <- data.frame(\r\n      Outcome = c(\"Heads\", \"Tails\"),\r\n      Count = c(rv$heads, rv$tails)\r\n    )\r\n    \r\n    ggplot(df, aes(x = Outcome, y = Count, fill = Outcome)) +\r\n      geom_bar(stat = \"identity\") +\r\n      scale_fill_manual(values = c(\"Heads\" = \"skyblue\", \"Tails\" = \"orange\")) +\r\n      labs(title = paste(\"Coin Tosses (\", rv$i, \" of \", input$n_toss, \")\", sep = \"\"),\r\n           y = \"Count\", x = \"\") +\r\n      theme_bw()\r\n\r\n  })\r\n  \r\n  # Posterior distribution\r\n  output$posteriorPlot <- renderPlot({\r\n    req(rv$i > 0)\r\n    alpha_post <- input$alpha + rv$heads\r\n    beta_post <- input$beta + rv$tails\r\n    \r\n    x <- seq(0, 1, length.out = 200)\r\n    y <- dbeta(x, alpha_post, beta_post)\r\n    \r\n    ggplot(data.frame(x, y), aes(x, y)) +\r\n      geom_line(color = \"red\", linewidth = 1.2) +\r\n      labs(title = paste(\"Posterior Beta(\", alpha_post, \",\", beta_post, \")\", sep = \"\"),\r\n           y = \"Density\", x = \"Probability of Heads\") +\r\n      theme_bw()\r\n\r\n  })\r\n}\r\n\r\nshinyApp(ui, server)\r\n","type":"text"}]
